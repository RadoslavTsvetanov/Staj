server:
  port: 4550
  shutdown: "graceful"

jwt:
  secret: "s3cR3tK3y!@#2024Ex@mpleWithL0ngString"

# If you use a database then uncomment the `group:, readiness: and include: "db"` lines in the health probes and uncomment the datasource section
management:
  endpoint:
    health:
      show-details: "always"
      # group:
      #  readiness:
      #   include: "db"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.hmcts.reform.demo.controllers
  writer-with-order-by-keys: true

spring:
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB
  config:
    import: "optional:configtree:/mnt/secrets/rpe/"
  application:
    name: Spring Boot Template
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://viaduct.proxy.rlwy.net:54520/railway
    username: postgres
    password: XeHpLcShvJbxgoehGiuerfwGzeNxnFXJ
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: MyHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    generate-ddl: true

    properties:
      show-sql: true
      hibernate:
        ddl-auto: update
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            # silence the 'wall-of-text' - unnecessary exception throw about blob types
            non_contextual_creation: true

azure:
  application-insights:
    instrumentation-key: ${rpe.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}

redis:
  host: 'redis-19730.c311.eu-central-1-1.ec2.redns.redis-cloud.com'
  port: 19730
  password: 'pXSPF9gthQCWEBJKHDSHLoIu2eLR16B4'
  jedis:
    pool:
      max-active: 10      # Max number of connections
      max-idle: 5         # Max number of idle connections
      min-idle: 1         # Min number of idle connections
      max-wait: 2000
